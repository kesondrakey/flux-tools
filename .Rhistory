output_format = "pdf_document",
output_file = "E:/Github/fluxtools/paper/paper_pdf.pdf"
)
rmarkdown::render(
input = "E:/Github/fluxtools/paper/paper_pdf.Rmd",
output_format = "pdf_document",
output_file = "E:/Github/fluxtools/paper/paper_pdf.pdf", clean = TRUE
)
tinytex::install_tinytex()  # if TinyTeX isn't installed already
y
tinytex::install_tinytex()  # if TinyTeX isn't installed already
tinytex::install_tinytex()  # if TinyTeX isn't installed already
y
tinytex::install_tinytex()  # if TinyTeX isn't installed already
Y
tinytex::install_tinytex()  # if TinyTeX isn't installed already
rmarkdown::render(
input = "E:/Github/fluxtools/paper/paper_pdf.Rmd",
output_format = "pdf_document",
output_file = "E:/Github/fluxtools/paper/paper_pdf.pdf", clean = TRUE
)
#Rendering .rmd into .md
# from your package root
rmarkdown::render(
input          = "E:/Github/fluxtools/paper/paper.Rmd",
output_format  = rmarkdown::md_document(
variant = "commonmark",
preserve_yaml = TRUE
),
output_file    = "E:/Github/fluxtools/paper/paper.md"
)
citation("dplyr")
citation("plotly")
citation("shiny")
r packageVersion("plotly")
utils::packageVersion("plotly")
utils::packageVersion("shiny")
utils::packageVersion("dplyr")
citation("plotly")
citation()
utils::packageVersion()
citation("fluxtools")
devtools::install_github("meenakshi-kushwaha/mmaqshiny")
library(mmaqshiny)
#Install from CRAN
install.packages("fluxtools")
install.packages("fluxtools")
citation("REddyproc")
citation("Reddyproc")
library("REddyProc")
citation("REddyProc")
#install.packages(c("usethis", "devtools", "roxygen2"))
library(usethis)
# If DESCRIPTION does not yet exist, create one:
use_description(fields = list(
Package     = "fluxtools",
Type        = "Package",
Title       = "Interactive QA/QC for Eddy Covariance Data",
Version     = "0.3.0",
'Authors@R'   = 'person("Kesondra", "Key", email = "keyke@iu.edu", role = c("aut", "cre"))',
Description    = paste(
"An interactive Shiny-based tool for QA/QC of",
"eddy covariance flux tower data processing.",
"It generates data-point removal code via user-directed selection from a",
"scatterplot, and can export a cleaned CSV with removed points set to NA",
"plus an R script for reproducibility.",
"Reference: Key (2025) <DOI: 10.5281/zenodo.15597159>.",
sep = " "
),
License        = "GPL-3", #Since I use Shiny
URL            = "https://github.com/kesondrakey/fluxtools, https://doi.org/10.5281/zenodo.15597159",
# URL            = c(
#   "https://github.com/kesondrakey/fluxtools",
#   "https://doi.org/10.5281/zenodo.15597159"
# ),
BugReports     = "https://github.com/kesondrakey/fluxtools/issues",
Encoding       = "UTF-8",
LazyData       = "true",
Imports        = "shiny, dplyr, plotly",
Suggests       = "knitr, rmarkdown",
VignetteBuilder = "knitr",
BuildVignettes = "TRUE"
))
# If DESCRIPTION does not yet exist, create one:
use_description(fields = list(
Package     = "fluxtools",
Type        = "Package",
Title       = "Interactive QA/QC for Eddy Covariance Data",
Version     = "0.3.0",
'Authors@R'   = 'person("Kesondra", "Key", email = "keyke@iu.edu", role = c("aut", "cre"))',
Description    = paste(
"An interactive Shiny-based tool for QA/QC of",
"eddy covariance flux tower data processing.",
"It generates data-point removal code via user-directed selection from a",
"scatterplot, and can export a cleaned .csv with removed points set to NA",
"plus an R script for reproducibility.",
"Reference: Key (2025) <DOI: 10.5281/zenodo.15597159>.",
sep = " "
),
License        = "GPL-3", #Since I use Shiny
URL            = "https://github.com/kesondrakey/fluxtools, https://doi.org/10.5281/zenodo.15597159",
# URL            = c(
#   "https://github.com/kesondrakey/fluxtools",
#   "https://doi.org/10.5281/zenodo.15597159"
# ),
BugReports     = "https://github.com/kesondrakey/fluxtools/issues",
Encoding       = "UTF-8",
LazyData       = "true",
Imports        = "shiny, dplyr, plotly",
Suggests       = "knitr, rmarkdown",
VignetteBuilder = "knitr",
BuildVignettes = "TRUE"
))
# 1) In your R session, set wd to the package root:
#setwd("C:/Users/keyke/Documents/GitHub/fluxtools")
# 2) Build a source tarball but keep prebuilt vignettes:
tarball <- devtools::build(vignettes = TRUE)
devtools::check_built(tarball)
# 1) In your R session, set wd to the package root:
#setwd("C:/Users/keyke/Documents/GitHub/fluxtools")
# 2) Build a source tarball but keep prebuilt vignettes:
tarball <- devtools::build(vignettes = TRUE)
# 1) In your R session, set wd to the package root:
#setwd("C:/Users/keyke/Documents/GitHub/fluxtools")
# 2) Build a source tarball but keep prebuilt vignettes:
tarball <- devtools::build(vignettes = TRUE)
devtools::check_built(tarball)
rmarkdown::render("E:/Github/fluxtools/paper/paper.Rmd", encoding = "UTF-8", quiet = TRUE)
rmarkdown::render("E:/Github/fluxtools/paper/paper.Rmd", encoding = "UTF-8", quiet = TRUE)
rmarkdown::render("E:/Github/fluxtools/paper/paper.Rmd", encoding = "UTF-8", quiet = TRUE)
rmarkdown::render("E:/Github/fluxtools/paper/paper.Rmd", encoding = "UTF-8", quiet = TRUE)
rmarkdown::render("E:/Github/fluxtools/paper/paper.Rmd", encoding = "UTF-8", quiet = TRUE)
rmarkdown::render("E:/Github/fluxtools/paper/paper.Rmd", encoding = "UTF-8", quiet = TRUE)
rmarkdown::render("E:/Github/fluxtools/paper/paper.Rmd", encoding = "UTF-8", quiet = TRUE)
rmarkdown::render("E:/Github/fluxtools/paper/paper.Rmd", encoding = "UTF-8", quiet = TRUE)
rmarkdown::render("E:/Github/fluxtools/paper/paper.Rmd", encoding = "UTF-8", quiet = TRUE)
rmarkdown::render("E:/Github/fluxtools/paper/paper.Rmd", encoding = "UTF-8", quiet = TRUE)
rmarkdown::render("E:/Github/fluxtools/paper/paper.Rmd", encoding = "UTF-8", quiet = TRUE)
rmarkdown::render("E:/Github/fluxtools/paper/paper.Rmd", encoding = "UTF-8", quiet = TRUE)
devtools::install_github("kesondrakey/fluxtools")
#or
# Direct clone + build:
remotes::install_git("https://github.com/kesondrakey/fluxtools.git")
library(fluxtools)
vignette('introduction', package = 'fluxtools')
# Option 3.) Direct clone + build:
library(remotes)
rmarkdown::render("E:/Github/fluxtools/paper/paper.Rmd", encoding = "UTF-8", quiet = TRUE)
library(fluxtools)
citation('fluxtools')
rmarkdown::render("E:/Github/fluxtools/paper/paper.Rmd", encoding = "UTF-8", quiet = TRUE)
rmarkdown::render("E:/Github/fluxtools/paper/paper.Rmd", encoding = "UTF-8", quiet = TRUE)
rmarkdown::render("E:/Github/fluxtools/paper/paper.Rmd", encoding = "UTF-8", quiet = TRUE)
rmarkdown::render("E:/Github/fluxtools/paper/paper.Rmd", encoding = "UTF-8", quiet = TRUE)
rmarkdown::render("E:/Github/fluxtools/paper/paper.Rmd", encoding = "UTF-8", quiet = TRUE)
rmarkdown::render("E:/Github/fluxtools/paper/paper.Rmd", encoding = "UTF-8", quiet = TRUE)
rmarkdown::render("E:/Github/fluxtools/paper/paper.Rmd", encoding = "UTF-8", quiet = TRUE)
rmarkdown::render("E:/Github/fluxtools/paper/paper.Rmd", encoding = "UTF-8", quiet = TRUE)
rmarkdown::render("E:/Github/fluxtools/paper/paper.Rmd", encoding = "UTF-8", quiet = TRUE)
rmarkdown::render("E:/Github/fluxtools/paper/paper.Rmd", encoding = "UTF-8", quiet = TRUE)
# If DESCRIPTION does not yet exist, create one:
use_description(fields = list(
Package     = "fluxtools",
Type        = "Package",
Title       = "Interactive QA/QC for Eddy Covariance Data",
Version     = "0.3.0",
'Authors@R'   = 'person("Kesondra", "Key", email = "keyke@iu.edu", role = c("aut", "cre"))',
Description    = paste(
"An interactive 'Shiny'-based tool for quality assurance and quality",
"control (QA/QC) of eddy covariance flux tower data processing.",
"It generates data-point removal code via user-directed selection from a",
"scatterplot, and can export a cleaned .csv with removed points set to NA",
"plus an R script for reproducibility.",
"Reference: Key (2025) <DOI:10.5281/zenodo.15597159>.",
sep = " "
),
License        = "GPL-3", #Since I use Shiny
URL            = "https://github.com/kesondrakey/fluxtools,
https://doi.org/10.5281/zenodo.15597159",
BugReports     = "https://github.com/kesondrakey/fluxtools/issues",
Encoding       = "UTF-8",
LazyData       = "true",
Imports        = "shiny, dplyr, plotly",
Suggests       = "knitr, rmarkdown",
VignetteBuilder = "knitr",
BuildVignettes = "TRUE"
))
#install.packages(c("usethis", "devtools", "roxygen2"))
library(usethis)
# If DESCRIPTION does not yet exist, create one:
use_description(fields = list(
Package     = "fluxtools",
Type        = "Package",
Title       = "Interactive QA/QC for Eddy Covariance Data",
Version     = "0.3.0",
'Authors@R'   = 'person("Kesondra", "Key", email = "keyke@iu.edu", role = c("aut", "cre"))',
Description    = paste(
"An interactive 'Shiny'-based tool for quality assurance and quality",
"control (QA/QC) of eddy covariance flux tower data processing.",
"It generates data-point removal code via user-directed selection from a",
"scatterplot, and can export a cleaned .csv with removed points set to NA",
"plus an R script for reproducibility.",
"Reference: Key (2025) <DOI:10.5281/zenodo.15597159>.",
sep = " "
),
License        = "GPL-3", #Since I use Shiny
URL            = "https://github.com/kesondrakey/fluxtools,
https://doi.org/10.5281/zenodo.15597159",
BugReports     = "https://github.com/kesondrakey/fluxtools/issues",
Encoding       = "UTF-8",
LazyData       = "true",
Imports        = "shiny, dplyr, plotly",
Suggests       = "knitr, rmarkdown",
VignetteBuilder = "knitr",
BuildVignettes = "TRUE"
))
use_description(fields = list(
Package     = "fluxtools",
Type        = "Package",
Title       = "Interactive QA/QC for Eddy Covariance Data",
Version     = "0.3.0",
'Authors@R'   = 'person("Kesondra", "Key", email = "keyke@iu.edu", role = c("aut", "cre"))',
Description    = paste(
"An interactive 'Shiny'-based tool for quality assurance and quality",
"control (QA/QC) of eddy covariance flux tower data processing.",
"It generates data-point removal code via user-directed selection from a",
"scatterplot, and can export a cleaned .csv with removed points set to NA",
"plus an R script for reproducibility.",
"Reference: Key (2025) <DOI:10.5281/zenodo.15597159>.",
sep = " "
),
License        = "GPL-3", #Since I use Shiny
URL            = "https://github.com/kesondrakey/fluxtools,
https://doi.org/10.5281/zenodo.15597159",
BugReports     = "https://github.com/kesondrakey/fluxtools/issues",
Encoding       = "UTF-8",
LazyData       = "true",
Imports        = "shiny, dplyr, plotly",
Suggests       = "knitr, rmarkdown",
VignetteBuilder = "knitr",
BuildVignettes = "TRUE"
))
# If DESCRIPTION does not yet exist, create one:
use_description(fields = list(
Package     = "fluxtools",
Type        = "Package",
Title       = "Interactive QA/QC for Eddy Covariance Data",
Version     = "0.3.0",
'Authors@R'   = 'person("Kesondra", "Key", email = "keyke@iu.edu", role = c("aut", "cre"))',
Description    = paste(
"An interactive 'Shiny'-based tool for quality assurance and quality",
"control (QA/QC) of eddy covariance flux tower data processing.",
"It generates data-point removal code via user-directed selection from a",
"scatterplot, and can export a cleaned .csv with removed points set to NA",
"plus an R script for reproducibility.",
"Reference: Key (2025) <DOI:10.5281/zenodo.15597159>.",
sep = " "
),
License        = "GPL-3", #Since I use Shiny
URL            = c("https://github.com/kesondrakey/fluxtools,
https://doi.org/10.5281/zenodo.15597159"),
BugReports     = "https://github.com/kesondrakey/fluxtools/issues",
Encoding       = "UTF-8",
LazyData       = "true",
Imports        = "shiny, dplyr, plotly",
Suggests       = "knitr, rmarkdown",
VignetteBuilder = "knitr",
BuildVignettes = "TRUE"
))
#install.packages(c("usethis", "devtools", "roxygen2"))
library(usethis)
# If DESCRIPTION does not yet exist, create one:
use_description(fields = list(
Package     = "fluxtools",
Type        = "Package",
Title       = "Interactive QA/QC for Eddy Covariance Data",
Version     = "0.3.0",
'Authors@R'   = 'person("Kesondra", "Key", email = "keyke@iu.edu", role = c("aut", "cre"))',
Description    = paste(
"An interactive 'Shiny'-based tool for quality assurance and quality",
"control (QA/QC) of eddy covariance flux tower data processing.",
"It generates data-point removal code via user-directed selection from a",
"scatterplot, and can export a cleaned .csv with removed points set to NA",
"plus an R script for reproducibility.",
"Reference: Key (2025) <DOI:10.5281/zenodo.15597159>.",
sep = " "
),
License        = "GPL-3", #Since I use Shiny
URL            = c("https://github.com/kesondrakey/fluxtools,
https://doi.org/10.5281/zenodo.15597159"),
BugReports     = "https://github.com/kesondrakey/fluxtools/issues",
Encoding       = "UTF-8",
LazyData       = "true",
Imports        = "shiny, dplyr, plotly",
Suggests       = "knitr, rmarkdown",
VignetteBuilder = "knitr",
BuildVignettes = "TRUE"
))
# If DESCRIPTION does not yet exist, create one:
use_description(fields = list(
Package     = "fluxtools",
Type        = "Package",
Title       = "an Interactive 'Shiny' App for Reproducible QA/QC of Eddy Covariance Data Aligned with AmeriFlux Standards",
Version     = "0.3.0",
'Authors@R'   = 'person("Kesondra", "Key", email = "keyke@iu.edu", role = c("aut", "cre"))',
Description    = paste(
"An interactive 'Shiny'-based tool for quality assurance and quality",
"control (QA/QC) of eddy covariance flux tower data processing.",
"It generates data-point removal code via user-directed selection from a",
"scatterplot, and can export a cleaned .csv with removed points set to NA",
"plus an R script for reproducibility.",
"Reference: Key (2025) <DOI:10.5281/zenodo.15597159>.",
sep = " "
),
License        = "GPL-3", #Since I use Shiny
URL            = c("https://github.com/kesondrakey/fluxtools,
https://doi.org/10.5281/zenodo.15597159"),
BugReports     = "https://github.com/kesondrakey/fluxtools/issues",
Encoding       = "UTF-8",
LazyData       = "true",
Imports        = "shiny, dplyr, plotly",
Suggests       = "knitr, rmarkdown",
VignetteBuilder = "knitr",
BuildVignettes = "TRUE"
))
# If DESCRIPTION does not yet exist, create one:
use_description(fields = list(
Package     = "fluxtools",
Type        = "Package",
Title       = "an Interactive 'shiny' App for Reproducible QA/QC of Eddy Covariance Data Aligned with AmeriFlux Standards",
Version     = "0.3.0",
'Authors@R'   = 'person("Kesondra", "Key", email = "keyke@iu.edu", role = c("aut", "cre"))',
Description    = paste(
"An interactive 'shiny'-based tool for quality assurance and quality",
"control (QA/QC) of eddy covariance flux tower data processing.",
"It generates data-point removal code via user-directed selection from a",
"scatterplot, and can export a cleaned .csv with removed points set to NA",
"plus an R script for reproducibility.",
"Reference: Key (2025) <DOI:10.5281/zenodo.15597159>.",
sep = " "
),
License        = "GPL-3", #Since I use Shiny
URL            = c("https://github.com/kesondrakey/fluxtools,
https://doi.org/10.5281/zenodo.15597159"),
BugReports     = "https://github.com/kesondrakey/fluxtools/issues",
Encoding       = "UTF-8",
LazyData       = "true",
Imports        = "shiny, dplyr, plotly",
Suggests       = "knitr, rmarkdown",
VignetteBuilder = "knitr",
BuildVignettes = "TRUE"
))
# If DESCRIPTION does not yet exist, create one:
use_description(fields = list(
Package     = "fluxtools",
Type        = "Package",
Title       = "an Interactive 'shiny' App for Reproducible QA/QC of Eddy Covariance Data Aligned with AmeriFlux Standards",
Version     = "0.3.0",
'Authors@R'   = 'person("Kesondra", "Key", email = "keyke@iu.edu", role = c("aut", "cre"))',
Description    = paste(
"An interactive 'shiny'-based tool for quality assurance and quality",
"control (QA/QC) of eddy covariance flux tower data processing.",
"It generates data-point removal code via user-directed selection from a",
"scatterplot, and can export a cleaned .csv with removed points set to NA",
"plus an R script for reproducibility.",
"Reference: Key (2025)",
"<DOI:10.5281/zenodo.15597159>.",
sep = " "
),
License        = "GPL-3", #Since I use Shiny
URL             = c(
"https://github.com/kesondrakey/fluxtools",
"https://doi.org/10.5281/zenodo.15597159"
),
BugReports     = "https://github.com/kesondrakey/fluxtools/issues",
Encoding       = "UTF-8",
LazyData       = "true",
Imports        = "shiny, dplyr, plotly",
Suggests       = "knitr, rmarkdown",
VignetteBuilder = "knitr",
BuildVignettes = "TRUE"
))
# library(fluxtools)
#run_flux_qaqc(-5)  # for example
roxygen2::roxygenise()
citation('fluxtools')
vignette(fluxtools)
# 1) In your R session, set wd to the package root:
#setwd("C:/Users/keyke/Documents/GitHub/fluxtools")
# 2) Build a source tarball but keep prebuilt vignettes:
tarball <- devtools::build(vignettes = TRUE)
devtools::check_built(tarball)
# 1) In your R session, set wd to the package root:
#setwd("C:/Users/keyke/Documents/GitHub/fluxtools")
# 2) Build a source tarball but keep prebuilt vignettes:
tarball <- devtools::build(vignettes = TRUE)
devtools::check_built(tarball)
devtools::check_built(tarball)
#install.packages(c("usethis", "devtools", "roxygen2"))
library(usethis)
# 1) In your R session, set wd to the package root:
#setwd("C:/Users/keyke/Documents/GitHub/fluxtools")
# 2) Build a source tarball but keep prebuilt vignettes:
tarball <- devtools::build(vignettes = TRUE)
devtools::check_built(tarball)
library(devtools)
# 1) In your R session, set wd to the package root:
#setwd("C:/Users/keyke/Documents/GitHub/fluxtools")
# 2) Build a source tarball but keep prebuilt vignettes:
tarball <- devtools::build(vignettes = TRUE)
devtools::check_built(tarball)
devtools::check_built(tarball)
install.packages("pkgbuild")
install.packages("pkgbuild")
pkgbuild::check_build_tools(debug = TRUE)
library(pkgbuild)
# 1) In your R session, set wd to the package root:
#setwd("C:/Users/keyke/Documents/GitHub/fluxtools")
# 2) Build a source tarball but keep prebuilt vignettes:
tarball <- devtools::build(vignettes = TRUE)
devtools::check_built(tarball)
library(devtools)
library(pkgbuild)
# 1) In your R session, set wd to the package root:
#setwd("C:/Users/keyke/Documents/GitHub/fluxtools")
# 2) Build a source tarball but keep prebuilt vignettes:
tarball <- devtools::build(vignettes = TRUE)
devtools::check_built(tarball)
# 1) In your R session, set wd to the package root:
#setwd("C:/Users/keyke/Documents/GitHub/fluxtools")
# 2) Build a source tarball but keep prebuilt vignettes:
tarball <- devtools::build(vignettes = TRUE)
devtools::check_built(tarball)
pkgbuild::check_build_tools()        # just to confirm your toolchain
devtools::build(vignettes = TRUE)
devtools::check_built("fluxtools_0.3.0.tar.gz")
#devtools::build(vignettes = TRUE)
#devtools::check_built("fluxtools_0.3.0.tar.gz")
tarball <- devtools::build(vignettes = TRUE)
devtools::check_built(tarball)
library(devtools)
library(pkgbuild)
system2("quarto", "-V")
pkgbuild::check_build_tools()        # just to confirm your toolchain
#devtools::build(vignettes = TRUE)
#devtools::check_built("fluxtools_0.3.0.tar.gz")
tarball <- devtools::build(vignettes = TRUE)
devtools::check_built(tarball)
list.files("vignettes", pattern = "\\.qmd$", full.names = TRUE)
#install.packages(c("usethis", "devtools", "roxygen2"))
library(usethis)
# If DESCRIPTION does not yet exist, create one:
use_description(fields = list(
Package     = "fluxtools",
Type        = "Package",
Title       = "An Interactive 'shiny' App for Reproducible QA/QC of Eddy Covariance Data Aligned with AmeriFlux Standards",
Version     = "0.3.0",
'Authors@R'   = 'person("Kesondra", "Key", email = "keyke@iu.edu", role = c("aut", "cre"))',
Description    = paste(
"An interactive 'shiny'-based tool for quality assurance and quality",
"control (QA/QC) of eddy covariance flux tower data processing.",
"It generates data-point removal code via user-directed selection from a",
"scatterplot, and can export a cleaned .csv with removed points set to NA",
"plus an R script for reproducibility.",
"Reference: Key (2025)",
"<DOI:10.5281/zenodo.15597159>.",
sep = " "
),
License        = "GPL-3", #Since I use Shiny
URL             = "https://github.com/kesondrakey/fluxtools, https://doi.org/10.5281/zenodo.15597159",
BugReports     = "https://github.com/kesondrakey/fluxtools/issues",
Encoding       = "UTF-8",
LazyData       = "true",
Imports        = "shiny, dplyr, plotly",
Suggests       = "knitr, rmarkdown",
VignetteBuilder = "knitr",
BuildVignettes = "TRUE"
))
# If DESCRIPTION does not yet exist, create one:
use_description(fields = list(
Package     = "fluxtools",
Type        = "Package",
Title       = "An Interactive 'shiny' App for Reproducible QA/QC of Eddy Covariance Data Aligned with AmeriFlux Standards",
Version     = "0.3.0",
'Authors@R'   = 'person("Kesondra", "Key", email = "keyke@iu.edu", role = c("aut", "cre"))',
Description    = paste(
"An interactive 'shiny'-based tool for quality assurance and quality",
"control (QA/QC) of eddy covariance flux tower data processing.",
"It generates data-point removal code via user-directed selection from a",
"scatterplot, and can export a cleaned .csv with removed points set to NA",
"plus an R script for reproducibility.",
"Reference: Key (2025)",
"<DOI:10.5281/zenodo.15597159>.",
sep = " "
),
License        = "GPL-3", #Since I use Shiny
URL             = "https://github.com/kesondrakey/fluxtools, https://doi.org/10.5281/zenodo.15597159",
BugReports     = "https://github.com/kesondrakey/fluxtools/issues",
Encoding       = "UTF-8",
LazyData       = "true",
Imports        = "shiny, dplyr, plotly",
Suggests       = "knitr, rmarkdown",
VignetteBuilder = "knitr",
BuildVignettes = "TRUE"
))
library(devtools)
library(pkgbuild)
pkgbuild::check_build_tools()        # just to confirm your toolchain
#devtools::build(vignettes = TRUE)
#devtools::check_built("fluxtools_0.3.0.tar.gz")
tarball <- devtools::build(vignettes = TRUE)
devtools::check_built(tarball)
